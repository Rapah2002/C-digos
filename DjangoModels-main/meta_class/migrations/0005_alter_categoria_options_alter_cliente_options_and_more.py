# Generated by Django 5.2 on 2025-04-23 13:10

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('meta_class', '0004_categoria_alter_cliente_user_produto'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='categoria',
            options={'ordering': ['nome'], 'verbose_name': 'Categoria', 'verbose_name_plural': 'Categorias'},
        ),
        migrations.AlterModelOptions(
            name='cliente',
            options={'verbose_name': 'Cliente', 'verbose_name_plural': 'Clientes'},
        ),
        migrations.AlterModelOptions(
            name='produto',
            options={'ordering': ['nome'], 'verbose_name': 'Produto', 'verbose_name_plural': 'Produtos'},
        ),
        migrations.AddField(
            model_name='cliente',
            name='data_nascimento',
            field=models.DateField(blank=True, null=True, verbose_name='Data de Nascimento'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='telefone',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone'),
        ),
        migrations.AddField(
            model_name='produto',
            name='ativo',
            field=models.BooleanField(default=True, verbose_name='Ativo'),
        ),
        migrations.AddField(
            model_name='produto',
            name='data_atualizacao',
            field=models.DateTimeField(auto_now=True, verbose_name='Data de Atualização'),
        ),
        migrations.AddField(
            model_name='produto',
            name='data_cadastro',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Data de Cadastro'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='produto',
            name='estoque',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Estoque'),
        ),
        migrations.AlterField(
            model_name='categoria',
            name='nome',
            field=models.CharField(max_length=100, verbose_name='Nome'),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='cep',
            field=models.CharField(max_length=9, verbose_name='CEP'),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='cidade',
            field=models.CharField(max_length=100, verbose_name='Cidade'),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='endereco',
            field=models.CharField(max_length=255, verbose_name='Endereço'),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='estado',
            field=models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado'),
        ),
        migrations.AlterField(
            model_name='cliente',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='categoria',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='produtos', to='meta_class.categoria', verbose_name='Categoria'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='descricao',
            field=models.TextField(verbose_name='Descrição'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='nome',
            field=models.CharField(max_length=100, verbose_name='Nome do Produto'),
        ),
        migrations.AlterField(
            model_name='produto',
            name='preco',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Preço'),
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('cliente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='carrinho', to='meta_class.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Carrinho',
                'verbose_name_plural': 'Carrinhos',
            },
        ),
        migrations.CreateModel(
            name='Estoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantidade em Estoque')),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('produto', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='estoque_info', to='meta_class.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Estoque',
                'verbose_name_plural': 'Estoques',
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_pedido', models.DateTimeField(auto_now_add=True, verbose_name='Data do Pedido')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('processando', 'Processando'), ('enviado', 'Enviado'), ('entregue', 'Entregue'), ('cancelado', 'Cancelado')], default='pendente', max_length=20, verbose_name='Status do Pedido')),
                ('total', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total do Pedido')),
                ('endereco_entrega', models.CharField(max_length=255, verbose_name='Endereço de Entrega')),
                ('cep_entrega', models.CharField(max_length=9, verbose_name='CEP de Entrega')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedidos', to='meta_class.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'ordering': ['-data_pedido'],
            },
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_pagamento', models.DateTimeField(auto_now_add=True, verbose_name='Data do Pagamento')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor Pago')),
                ('status', models.CharField(choices=[('pago', 'Pago'), ('pendente', 'Pendente'), ('rejeitado', 'Rejeitado')], default='pendente', max_length=20, verbose_name='Status do Pagamento')),
                ('metodo', models.CharField(max_length=50, verbose_name='Método de Pagamento')),
                ('transacao_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID da Transação')),
                ('pedido', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pagamento', to='meta_class.pedido', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-data_pagamento'],
            },
        ),
        migrations.CreateModel(
            name='Promocao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Promoção')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição da Promoção')),
                ('desconto_percentual', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Desconto (%)')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_fim', models.DateTimeField(verbose_name='Data de Fim')),
                ('ativa', models.BooleanField(default=True, verbose_name='Ativa')),
                ('produtos', models.ManyToManyField(blank=True, related_name='promocoes', to='meta_class.produto', verbose_name='Produtos')),
            ],
            options={
                'verbose_name': 'Promoção',
                'verbose_name_plural': 'Promoções',
                'ordering': ['-data_fim', 'data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='AvaliacaoProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Nota')),
                ('comentario', models.TextField(blank=True, null=True, verbose_name='Comentário')),
                ('data_avaliacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Avaliação')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta_class.cliente', verbose_name='Cliente')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='meta_class.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Avaliação do Produto',
                'verbose_name_plural': 'Avaliações dos Produtos',
                'ordering': ['-data_avaliacao'],
                'unique_together': {('produto', 'cliente')},
            },
        ),
        migrations.CreateModel(
            name='ItemCarrinho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1, verbose_name='Quantidade')),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço Unitário')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subtotal')),
                ('carrinho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='meta_class.carrinho', verbose_name='Carrinho')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta_class.produto', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Item do Carrinho',
                'verbose_name_plural': 'Itens do Carrinho',
                'unique_together': {('carrinho', 'produto')},
            },
        ),
        migrations.CreateModel(
            name='ItemPedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(default=1, verbose_name='Quantidade')),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço Unitário')),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Subtotal')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meta_class.produto', verbose_name='Produto')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='meta_class.pedido', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Item do Pedido',
                'verbose_name_plural': 'Itens do Pedido',
                'unique_together': {('pedido', 'produto')},
            },
        ),
    ]
